<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Netlify on k-kaz が Hugo で遊ぶサイト</title>
        <link>https://k-kaz-git.github.io/tags/netlify/</link>
        <description>Recent content in Netlify on k-kaz が Hugo で遊ぶサイト</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>ja</language>
        <copyright>k-kaz</copyright>
        <lastBuildDate>Wed, 14 Oct 2020 18:51:11 +0900</lastBuildDate><atom:link href="https://k-kaz-git.github.io/tags/netlify/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Deploy でエラーが出たんですけど。</title>
        <link>https://k-kaz-git.github.io/p/deploy-%E3%81%A7%E3%82%A8%E3%83%A9%E3%83%BC%E3%81%8C%E5%87%BA%E3%81%9F%E3%82%93%E3%81%A7%E3%81%99%E3%81%91%E3%81%A9/</link>
        <pubDate>Wed, 14 Oct 2020 18:51:11 +0900</pubDate>
        
        <guid>https://k-kaz-git.github.io/p/deploy-%E3%81%A7%E3%82%A8%E3%83%A9%E3%83%BC%E3%81%8C%E5%87%BA%E3%81%9F%E3%82%93%E3%81%A7%E3%81%99%E3%81%91%E3%81%A9/</guid>
        <description>&lt;img src="https://k-kaz-git.github.io/images/hugo-deploy-error.webp" alt="Featured image of post Deploy でエラーが出たんですけど。" /&gt;&lt;h2 id=&#34;1年半振りの-deploy-で&#34;&gt;1年半振りの Deploy で・・・
&lt;/h2&gt;&lt;p&gt;Netlify に記事を上げようと思って、&lt;code&gt;./deploy.sh&lt;/code&gt; （※スクリプトを組んである）とやってみたけど、うまくいかず。&lt;br&gt;
うっかりやってしまう &lt;code&gt;draft: false&lt;/code&gt; もちゃんとなっているし、なんだろうと思って、ひとつずつチェックしてみました。&lt;/p&gt;
&lt;p&gt;ひっかかったのが、ssh 認証のところ。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ssh -T git@github.com&lt;/code&gt; で、ssh が通るか試してみたら、&lt;code&gt;git@github.com: Permission denied (publickey).&lt;/code&gt; って怒られました。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ ssh -T git@github.com     /* ssh が通るか試すコマンド */
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ git@github.com: Permission denied (publickey).
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;ネットで調べてみたところ、 &lt;strong&gt;「Github に公開鍵（publickey）を登録しましょう」&lt;/strong&gt; と書いてあったので、1年半振りの Github ログイン。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;お前、本当に k-kaz か？&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;メール送ったから、そこに書かれた6桁のコードを入れてみろよ！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;って、疑われ、言われた通りに6桁のコードを入れてログイン。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/settings/ssh&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ssh の項目&lt;/a&gt; を覗くと公開鍵がありません。&lt;br&gt;
PC に保存していた公開鍵の中身を登録して、再度 &lt;code&gt;ssh -T git@github.com&lt;/code&gt; を実行すると、うまく繋がりました。&lt;/p&gt;
&lt;p&gt;1年半の間に仕様が変わったのか、削除されちゃったのかよく分かりませんが、再登録した形ですね。覚えていないけど、たぶん。&lt;/p&gt;
&lt;p&gt;で、Netlify にもログインする必要がありました。
こちらは疑われることなくできましたが、ここまでやらないと記事の反映ができなかったです。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Hugo を Netlify で動かすよ。</title>
        <link>https://k-kaz-git.github.io/p/hugo-%E3%82%92-netlify-%E3%81%A7%E5%8B%95%E3%81%8B%E3%81%99%E3%82%88/</link>
        <pubDate>Thu, 07 Mar 2019 14:44:55 +0900</pubDate>
        
        <guid>https://k-kaz-git.github.io/p/hugo-%E3%82%92-netlify-%E3%81%A7%E5%8B%95%E3%81%8B%E3%81%99%E3%82%88/</guid>
        <description>&lt;img src="https://k-kaz-git.github.io/images/hugo-netlify-network_640.webp" alt="Featured image of post Hugo を Netlify で動かすよ。" /&gt;&lt;h2 id=&#34;追記-2024-02-07&#34;&gt;追記 2024-02-07
&lt;/h2&gt;&lt;p&gt;もう5年も前の記事なんですね。時が経つのは早いです。&lt;/p&gt;
&lt;p&gt;Hugoのバージョンを上げたので、Netlifyで指定しているHugoのバージョンも変えとかなきゃと設定を見たんですが、項目が無くなっていました。&lt;br&gt;
今ではバージョン指定しなくて良いのかもしれません。（試さず書いちゃうけど）&lt;/p&gt;
&lt;p&gt;今は設定のBuild &amp;amp; deployにあるBuild Settingsが該当項目みたいですが、Build commandを「hugo」、Publish directoryを「public」にすれば良いみたい。&lt;br&gt;
一応、ドキュメントがありましたので置いておきます。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.netlify.com/integrations/frameworks/#hugo&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Framework integrations | Netlify Docs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ということで、以下の記事は古いですよということを言いたかった。&lt;/p&gt;
&lt;h2 id=&#34;hugo-を-netlify-で動かす&#34;&gt;Hugo を Netlify で動かす
&lt;/h2&gt;&lt;p&gt;ネットでは簡単に出来ると書いてありましたけど、けっこうハマったので、そのあたりも書こうと思います。&lt;/p&gt;
&lt;p&gt;結論としては、動きました。&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://k-kaz.netlify.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;k-kaz が好きなことをするサイト&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;まずは-hugo-をゲットする&#34;&gt;まずは Hugo をゲットする
&lt;/h2&gt;&lt;h3 id=&#34;ダウンロード&#34;&gt;ダウンロード
&lt;/h3&gt;&lt;p&gt;公式サイトから、OSにあった最新版を落としてきてください。&lt;br&gt;
Sass を使いたい場合は extended版 が必要になりますが、ここでは普通のタイプで良いです。&lt;br&gt;
※理由は後ほど・・・&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/gohugoio/hugo/releases&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Releases gohugoio/hugo&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;パスを通す&#34;&gt;パスを通す
&lt;/h3&gt;&lt;p&gt;解凍したら、どこに居ても、Hugo を実行できるようにするため、パスを通します。&lt;br&gt;
やり方は・・・簡単なのでネットでご覧ください。&lt;br&gt;
Windows の場合は、環境変数のところを弄ります。&lt;/p&gt;
&lt;h2 id=&#34;ローカルサイトを用意する&#34;&gt;ローカルサイトを用意する
&lt;/h2&gt;&lt;h3 id=&#34;サイトの雛形を展開する&#34;&gt;サイトの雛形を展開する
&lt;/h3&gt;&lt;p&gt;今後、作業をする場所に移動して、下記コマンドを実行します。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;hugo new site hoge-site&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;hoge-site&lt;/code&gt; というディレクトリができて、その中に必要なファイルが展開されます。&lt;/p&gt;
&lt;h3 id=&#34;テーマの準備&#34;&gt;テーマの準備
&lt;/h3&gt;&lt;p&gt;テーマサイトから好きなテーマを選択します。&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://themes.gohugo.io&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Hugo Themes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;テーマを選ぶと、その中にインストール（ダウンロード）の仕方が書かれていますので、それに従います。&lt;/p&gt;
&lt;p&gt;ちなみに私の選んだ &lt;code&gt;aether&lt;/code&gt; で説明しますと、&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git clone https://github.com/josephhutch/aether.git themes/aether&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;これを実行することでダウンロードしてくれます。&lt;/p&gt;
&lt;p&gt;テーマのダウンロードは、テーマフォルダに移動してからコマンドを実行するパターンが多いです。&lt;br&gt;
ただ、このテーマはルートで実行するようにコマンド指定されていますのでご注意ください。&lt;br&gt;
※&lt;code&gt;themes/aether&lt;/code&gt; とダウンロード先を指定しているので、テーマ内で実行すると &lt;code&gt;themes/themes/aether&lt;/code&gt; となり、重複してハマります。そして気付きにくい。&lt;/p&gt;
&lt;h4 id=&#34;テーマ内の-git-を削除&#34;&gt;テーマ内の .git を削除
&lt;/h4&gt;&lt;p&gt;テーマの中に .git というフォルダがあります。&lt;br&gt;
あとで面倒なので、削除します。&lt;/p&gt;
&lt;h5 id=&#34;補足2019-03-10&#34;&gt;補足［2019-03-10］
&lt;/h5&gt;&lt;p&gt;他のテーマを使ったときに気付いたんですが、サブモジュール化すれば削除しなくて良いみたいです。&lt;br&gt;
というか、そのほうが良いみたいですね。テーマのアップデートできるし。&lt;/p&gt;
&lt;p&gt;別テーマですけど、こんな感じです。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git submodule add https://github.com/zwbetz-gh/cupper-hugo-theme.git themes/cupper-hugo-theme
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git submodule update --remote --merge
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;設定ファイルの修正&#34;&gt;設定ファイルの修正
&lt;/h3&gt;&lt;p&gt;ルートにある &lt;code&gt;config.toml&lt;/code&gt; が設定ファイルです。&lt;br&gt;
エディタで開いて、最低限これらを書いてください。&lt;br&gt;
baseURL はあとで、実際の公開アドレスに直せばよいです。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;baseURL&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;https://hoge/&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;languageCode&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;ja&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;title&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;k-kaz&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;theme&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;aether&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;サイトを確認する&#34;&gt;サイトを確認する
&lt;/h2&gt;&lt;h3 id=&#34;まずはローカルで確認する&#34;&gt;まずはローカルで確認する
&lt;/h3&gt;&lt;p&gt;ローカルサイトのルートで下記を実行します。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;hugo server -D&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;ブラウザで &lt;code&gt;localhost:1313&lt;/code&gt; にアクセスすると、テーマと同じ画面（記事無し）が出てきます。&lt;br&gt;
実行時にエラーになったり、ブラウザで表示しないときは何かが間違っています。&lt;/p&gt;
&lt;h2 id=&#34;github-の準備&#34;&gt;GitHub の準備
&lt;/h2&gt;&lt;h3 id=&#34;github-でリポジトリを作る&#34;&gt;GitHub でリポジトリを作る
&lt;/h3&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.co.jp/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub&lt;/a&gt; にログインして、右上にある &amp;ldquo;＋&amp;rdquo; をクリックし、「New repository」を選びます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Repository name   ：好きな名前を付けてください。&lt;/li&gt;
&lt;li&gt;Description       ：好きに書いてください。（空欄でも可）&lt;/li&gt;
&lt;li&gt;Public/Private    ：お好きな方に。&lt;/li&gt;
&lt;li&gt;README            ：作らなくて良いです。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;GitHub Pages は、Public しか選べませんが、Netlify は Private も選べます。&lt;br&gt;
私はせっかくなので、Private としました。&lt;/p&gt;
&lt;h3 id=&#34;リモートリポジトリとローカルリポジトリを繋げる&#34;&gt;リモートリポジトリとローカルリポジトリを繋げる
&lt;/h3&gt;&lt;p&gt;リポジトリ作成後に出てくる画面で、2番目にあるものを実行しますが、ちょっと注意。&lt;br&gt;
いきなり実行すると、リポジトリが無いですよと怒られます。&lt;br&gt;
最初にこちらを実行してください。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git init&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;イニシャライズをします。&lt;br&gt;
これをすると、.git というフォルダが作成されます。&lt;br&gt;
※さっき、テーマで消したアレだ！&lt;/p&gt;
&lt;p&gt;その後、画面に出ていたコマンド＋アルファを実行します。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git remote add origin https://github.com/hoge.git&lt;/code&gt;&lt;br&gt;
&lt;code&gt;git add .&lt;/code&gt;&lt;br&gt;
&lt;code&gt;git commit -m &amp;quot;First Commit&amp;quot;&lt;/code&gt;&lt;br&gt;
&lt;code&gt;git push -u origin master&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;尚、ssh接続が可能になっている場合は、&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git remote add origin git@github.com:hoge.git&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;となります。&lt;/p&gt;
&lt;p&gt;これでリポジトリが繋がり、ローカルにあったファイルがすべて GitHub に反映されたと思います。（空フォルダは反映しないっぽい）&lt;/p&gt;
&lt;h2 id=&#34;netlify&#34;&gt;Netlify
&lt;/h2&gt;&lt;p&gt;いよいよきました。&lt;/p&gt;
&lt;h3 id=&#34;netlify-にログインする&#34;&gt;Netlify にログインする
&lt;/h3&gt;&lt;p&gt;新しくアカウントを作ってもよし、GitHub やその他のサービス経由にしてもよし。&lt;/p&gt;
&lt;h3 id=&#34;設定をするんですが&#34;&gt;設定をするんですが・・・
&lt;/h3&gt;&lt;p&gt;GitHub と連携し、どのリポジトリを使うか設定します。&lt;br&gt;
先程用意したリポジトリを選択しましょう。&lt;/p&gt;
&lt;p&gt;あとは自動的にビルドして公開できます・・・のはずが、ここから苦難の道のり（笑）&lt;/p&gt;
&lt;p&gt;あまりに苦戦したため、細かい手順は忘れました・・・。&lt;br&gt;
でも、ローカルサーバーで動いていて、下記のハマりどころだけ注意すれば、大丈夫だと思います。&lt;/p&gt;
&lt;p&gt;私はそのハマりどころに、&lt;strong&gt;長い時間を盗まれました。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;ハマりどころ&#34;&gt;ハマりどころ
&lt;/h2&gt;&lt;p&gt;いくつかの問題が絡んでいたので、解決するのに苦労しました。&lt;br&gt;
分かっちゃえばどうってことないんでしょうけどね。&lt;/p&gt;
&lt;h3 id=&#34;deploy-できないよー&#34;&gt;Deploy できないよー
&lt;/h3&gt;&lt;p&gt;GitHub にアップしたのはソースの状態ですので、Netlify の中でビルドをして、ブラウザが認識できる形式にします。&lt;br&gt;
でも、ここでエラーが何度も出ました。&lt;/p&gt;
&lt;h4 id=&#34;バージョン指定&#34;&gt;バージョン指定
&lt;/h4&gt;&lt;p&gt;Hugo のどのバージョンでビルドするのか指定します。&lt;br&gt;
流れの中でこの設定画面が出なかったので、未指定のままビルドをして、ずっとハマっていました。&lt;/p&gt;
&lt;p&gt;設定箇所は、上部メニューの「Settings」 → 左メニューの「Build &amp;amp; deploy」 → 「Build environment variables」です。&lt;/p&gt;
&lt;p&gt;Key &lt;code&gt;HUGO_VERSION&lt;/code&gt;&lt;br&gt;
Value &lt;code&gt;0.54.0&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;と入れます。&lt;/p&gt;
&lt;p&gt;尚、普段は extended版 を使っているので、&lt;code&gt;0.54.0/extended&lt;/code&gt; と指定しましたが、フリーズしました（笑）&lt;/p&gt;
&lt;h4 id=&#34;hugo-の-extended版-には暫定対応&#34;&gt;Hugo の extended版 には暫定対応
&lt;/h4&gt;&lt;p&gt;ということです。&lt;br&gt;
もしも、extended版 を使いたい場合は、回避方法が用意されているので、ネットで検索してみてください。&lt;br&gt;
私は、そこまでして Sass に拘る必要がないので、素直に css でいくことにしました。&lt;/p&gt;
&lt;h4 id=&#34;テーマの問題&#34;&gt;テーマの問題
&lt;/h4&gt;&lt;p&gt;テーマが Sass を使っているケースがあります。&lt;br&gt;
気分を変えようと思って選択したテーマがそうでした・・・。&lt;br&gt;
エラーログのところにやたらとテーマの名前が出るので確認したらビンゴ。&lt;/p&gt;
&lt;p&gt;尚、&lt;code&gt;aether&lt;/code&gt; は css なので大丈夫です。&lt;/p&gt;
&lt;p&gt;ダウンロード前に分かれば良いんですけど、詳細ページに書かれていなければ落として確認するしかないのかな。&lt;br&gt;
テーマ内に &lt;code&gt;assets&lt;/code&gt; というフォルダがあると、その中に Sass の &lt;code&gt;.sass&lt;/code&gt; や &lt;code&gt;.scss&lt;/code&gt; があるかと思います。&lt;/p&gt;
&lt;h3 id=&#34;その他&#34;&gt;その他
&lt;/h3&gt;&lt;h4 id=&#34;記事が表示されない&#34;&gt;記事が表示されない
&lt;/h4&gt;&lt;p&gt;ローカルでは表示されているのにアップしたら記事だけ表示されないとアタフタ。&lt;br&gt;
なんと下書きモードのままアップしていたのでした。&lt;br&gt;
※ローカルでは、下書きも表示するよう &lt;code&gt;hugo server&lt;/code&gt; に &lt;code&gt;-D&lt;/code&gt; のオプションを付けていた。&lt;/p&gt;
&lt;p&gt;記事の上部にある &lt;code&gt;draft: true&lt;/code&gt; を &lt;code&gt;draft: false&lt;/code&gt; にして、もう一度アップしましょう。&lt;/p&gt;
&lt;p&gt;こんな基本的なミスをするなんて。&lt;br&gt;
そして、基本的過ぎると、そこに気付くのが遅れますね（苦笑）&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
